"use client"

import { useState } from "react"
import Link from "next/link"
import Image from "next/image"
import { ArrowLeft, Download, Shield } from "lucide-react"
import { jsPDF } from "jspdf"

import { Button } from "@/components/ui/button"

export default function NotePage({ params }: { params: { category: string; noteId: string } }) {
  const category = params.category.toUpperCase()
  const noteId = params.noteId

  const [noteContent, setNoteContent] = useState(`
    This is a tutorial for ${category} testing. Below you'll find a comprehensive guide on how to perform ${category} assessments effectively.

    Getting Started
    Before beginning your ${category} assessment, ensure you have the following tools installed:
    - Nessus Vulnerability Scanner
    - Metasploit Framework
    - Burp Suite Professional
    - Wireshark

    Example Configuration
    Here's an example of how to configure your tools for optimal results:

    # Example configuration for ${category}
    scan_type=full
    target=192.168.1.0/24
    output_format=html,csv
    severity=high,critical

    Common Findings
    During ${category} assessments, you'll commonly encounter these issues:
    - Outdated software versions
    - Misconfigured security controls
    - Weak authentication mechanisms
    - Unpatched vulnerabilities

    Remediation Steps
    After identifying vulnerabilities, follow these remediation steps:
    1. Prioritize vulnerabilities based on risk
    2. Apply security patches and updates
    3. Reconfigure security controls
    4. Implement additional security measures
    5. Verify fixes with follow-up scans
  `)

  const downloadPdf = () => {
    const doc = new jsPDF()
    doc.text(noteContent, 10, 10)
    doc.save(`${category}_${noteId}.pdf`)
  }

  return (
    <div className="flex min-h-screen flex-col bg-background text-foreground">
      <header className="border-b">
        <div className="container mx-auto flex h-16 items-center px-4">
          <Link href="/" className="flex items-center gap-2 font-bold text-xl">
            <Shield className="h-6 w-6" />
            <span>CyberSec Hub</span>
          </Link>
        </div>
      </header>
      <main className="flex-1 container mx-auto px-4 py-6">
        <div className="mb-6 flex items-center gap-2">
          <Link href={`/pentest/${params.category}`}>
            <Button variant="outline" size="sm">
              <ArrowLeft className="mr-2 h-4 w-4" />
              Back to {category} Notes
            </Button>
          </Link>
        </div>

        <div className="bg-card text-card-foreground border rounded-lg p-6">
          <div className="flex justify-between items-center mb-6">
            <h1 className="text-2xl font-bold">{category} Tutorial</h1>
            <Button variant="outline" size="sm" onClick={downloadPdf}>
              <Download className="mr-2 h-4 w-4" />
              Download PDF
            </Button>
          </div>

          <div className="prose prose-sm dark:prose-invert max-w-none">
            <pre className="whitespace-pre-wrap">{noteContent}</pre>

            <h2 className="text-xl font-semibold mt-6 mb-4">Example Screenshot</h2>
            <div className="my-6 border rounded-lg overflow-hidden">
              <Image
                src="/placeholder.svg?height=400&width=800"
                alt="Example screenshot"
                width={800}
                height={400}
                className="w-full"
              />
            </div>

            <p className="text-sm text-muted-foreground mt-2">
              Example {category} scan results showing critical vulnerabilities
            </p>
          </div>
        </div>
      </main>
    </div>
  )
}

